class Solution {
public:
    int dp[14][10002];
    int coinChange(vector<int>& coins, int amount) {
        	int i,j;
        memset(dp,-1,sizeof(dp));
        int n=coins.size();
	for(i=0;i<n+1;i++)
	{
		for(j=0;j<amount+1;j++)
		{
			if(j==0)
			dp[i][j]=0;
			if(i==0)
            dp[i][j]=INT_MAX-1;
		}
	}
	
	for(i=1;i<n+1;i++)
	{
		for(j=1;j<amount+1;j++)
		{
			if(coins[i-1]<=j)
			{
				dp[i][j]=min(1+dp[i][j-coins[i-1]],dp[i-1][j]);
			}
			else
			dp[i][j]=dp[i-1][j];
		}
	}
        if(dp[n][amount]==INT_MAX-1)
            return -1;
	return dp[n][amount];
    }
};