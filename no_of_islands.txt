class Solution {
public:
void dfs(int i,int j,vector<vector<char>>& grid,int n,int m,int vis[][301])
{
if(i<0 || j<0 || i>=n || j>=m)
{
    return;
}
  if(vis[i][j]==0 && grid[i][j]=='1')
        {
vis[i][j]=1;
 dfs(i-1,j,grid,n,m,vis);
  dfs(i,j-1,grid,n,m,vis);
   dfs(i+1,j,grid,n,m,vis);
    dfs(i,j+1,grid,n,m,vis);
        }
    return;

}
    int numIslands(vector<vector<char>>& grid) {
        int i,j,cnt;
        cnt=0;
        int vis[301][301];
        int n=grid.size();
        int m=grid[0].size();
        for(i=0;i<n;i++)
        {
            for(j=0;j<m;j++)
            {
                vis[i][j]=0;
            }
        }
         for(i=0;i<n;i++)
        {
            for(j=0;j<m;j++)
            {
               if(grid[i][j]=='1' && vis[i][j]==0)
               {
                   cnt++;
                   dfs(i,j,grid,n,m,vis);
               }
            }
        }
        return cnt;
    }
};